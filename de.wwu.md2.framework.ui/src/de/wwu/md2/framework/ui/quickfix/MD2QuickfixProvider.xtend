/*
 * generated by Xtext 2.13.0
 */
package de.wwu.md2.framework.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import de.wwu.md2.framework.validation.ModelValidator
import de.wwu.md2.framework.validation.AccessibilityVisionValidator
import org.eclipse.xtext.ui.editor.quickfix.Fix
import org.eclipse.xtext.validation.Issue
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext
import de.wwu.md2.framework.mD2.Entity
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification
import de.wwu.md2.framework.mD2.Button
import de.wwu.md2.framework.mD2.InputElement

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
class MD2QuickfixProvider extends DefaultQuickfixProvider {

	@Fix(ModelValidator.ENTITYWITHOUTUNDERSCORE)
	def deleteUnderscoreFromEntityname(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, "Delete underscore", "Deletes the underscore from the entity/enum identifier.", "upcase.png", new ISemanticModification() {
			override apply(EObject element, IModificationContext context) {
				val entity = element as Entity;
				entity.setName(entity.getName().substring(1));
			}
		});
	}
//	@Fix(MD2Validator.INVALID_NAME)
//	def capitalizeName(Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, 'Capitalize name', 'Capitalize the name.', 'upcase.png') [
//			context |
//			val xtextDocument = context.xtextDocument
//			val firstLetter = xtextDocument.get(issue.offset, 1)
//			xtextDocument.replace(issue.offset, 1, firstLetter.toUpperCase)
//		]
//	}

	// Provides a quick fix for the accessibility issue of small button widths 
	@Fix(AccessibilityVisionValidator.ACCESSIBILITY_SIZE)
	def fixMinimumButtonSize(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 
			"Increase button width", 
			"Increase button width to a minimum of 9%.", 
			"upcase.png", 
			new ISemanticModification() {
				override apply(EObject element, IModificationContext context) {
					(element as Button).width = 9;
				}
			});
	}
	
	// Provides a quick fix for the accessibility issue of small button widths 
	@Fix(AccessibilityVisionValidator.ACCESSIBILITY_FOCUS_NEXT)
	def fixInputElementFocusNext(Issue issue, IssueResolutionAcceptor acceptor){
		acceptor.accept(issue, 
			"Specify element", 
			"Specify next element in focus order", 
			"upcase.png",
			new ISemanticModification() {
				override apply(EObject element, IModificationContext context) {
					(element as InputElement).focusNext = null;
				}
			});
	}
}
